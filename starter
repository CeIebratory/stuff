_G.MemerStuff = {}
_G.MemerStuff.Services = {Players = game:GetService("Players"), RunService = game:GetService("RunService")}
_G.MemerStuff.Functions = {}
_G.MemerStuff.Globals = {}
_G.MemerStuff.Globals.Player = _G.MemerStuff.Services.Players.LocalPlayer
_G.MemerStuff.Functions.RandomString = function()
	local new_string = game:GetService("HttpService"):GenerateGUID(false):gsub("-",""):lower()
	local new_string_reconstruct = ""
	for i = 1,new_string:len() do
		local char = new_string:sub(i, i)
		if math.random(1,2) == 1 then
			char = char:upper()
		end 
		new_string_reconstruct = new_string_reconstruct .. char
	end
	return  new_string_reconstruct:sub(math.clamp(new_string_reconstruct:len()-math.random(new_string_reconstruct:len()), 3, new_string_reconstruct:len()))
end
_G.MemerStuff.Functions.SandboxedPlayers = function()
	local a = {}
	for i,v in ipairs(_G.MemerStuff.Services.Players:GetPlayers()) do
		if v ~= _G.MemerStuff.Globals.Player then
			table.insert(a, v)
		end
	end
	return a
end
_G.MemerStuff.Functions.RandomSandboxedPlayer = function()
	local a = {}
	for i,v in ipairs(_G.MemerStuff.Services.Players:GetPlayers()) do
		if v ~= _G.MemerStuff.Globals.Player then
			table.insert(a, v)
		end
	end
	return a[math.random(#a)]
end
_G.MemerStuff.Functions.LMatch = function(a, b)
	return a:sub(1, b:len()):lower() == b:lower()
end
